{"version":3,"sources":["components/Home/Home.js","components/Generator/Generator.js","components/Favorites/Favorites.js","components/Playlist/Playlist.js","components/Info/Info.js","components/Team/Team.js","components/Legal/Legal.js","App.js","reportWebVitals.js","index.js"],"names":["Home","user","setUser","handleChange","event","value","target","name","copy","Object","assign","className","onChange","type","placeholder","Generator","songs","setSongs","useState","genre","setGenre","playlistName","setPlaylistName","playlistSongs","setPlaylistSongs","playlist","setPlaylist","favoriteSongs","setFavoriteSongs","e","a","preventDefault","fetch","method","response","json","data","headers","body","JSON","stringify","useEffect","songList","map","song","title","artist","href","trackLink","rel","onClick","addToPlaylist","addToFavoriteSongs","playlistList","index","indexToRemove","newList","splice","removeFromPlaylist","fav","postFavs","onSubmit","id","for","Favorites","props","favorites","setFavorites","playlists","showFavs","songsList","Playlist","selectedPlaylist","setSelectedPlaylist","filtered","filter","el","showPlaylists","item","console","log","response2","deletePlaylist","Info","Team","Legal","App","handleClick2","length","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28763c27.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\n\nconst Home = ({ user, setUser }) => {\n\tconst handleChange = (event) => {\n\t\tconst value = event.target.value;\n\t\tconst name = event.target.name;\n\t\tconst copy = Object.assign({}, user);\n\t\tcopy[name] = value;\n\t\tsetUser(copy);\n\t};\n\n\n\treturn (\n\t\t<div className='home-container'>\n\t\t\t<div className='home-header'>\n\t\t\t\t<span className='spot-header'>Spot</span>\n\t\t\t\t<span className='less-header'>Less</span>\n\t\t\t</div>\n\t\t\t<form className='home-form-container' >\n\t\t\t\t<input\n\t\t\t\t\tclassName='username-input'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='username'\n\t\t\t\t\t// value={user.username}\n\t\t\t\t\tplaceholder='Username'></input>\n\t\t\t\t<input\n\t\t\t\t\tclassName='password-input'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\t// value={user.password}\n\t\t\t\t\tplaceholder='Password'></input>\n\t\t\t\t<button className='login-btn' type='submit'>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t\t<button className='sign-up-btn'>Sign Up</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport './Generator.css';\n\nconst Generator = ({ songs, setSongs }) => {\n\t//Set states\n\t//This is set by box select in form\n\tconst [genre, setGenre] = useState([]);\n\n\t//Make playlist (object) in parts: name (string) and songs (array) separately\n\tconst [playlistName, setPlaylistName] = useState('');\n\tconst [playlistSongs, setPlaylistSongs] = useState([]);\n\tconst [playlist, setPlaylist] = useState({ name: '', songs: [] });\n\n\t//set favorite to empty array\n\tconst [favoriteSongs, setFavoriteSongs] = useState([]);\n\n\t//Set genre to box you selected\n\tconst handleChange = (event) => {\n\t\tsetGenre(event.target.value);\n\t};\n\n\t//Make api call to songs collection for all that match that genre, then set songs to songs returned\n\tasync function handleClick(e) {\n\t\te.preventDefault();\n\t\tsetSongs([]);\n\t\tconst response = await fetch(\n\t\t\t`https://spotlessproject.herokuapp.com/songs/${genre}`,\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t}\n\t\t);\n\t\tconst data = await response.json();\n\t\tsetSongs(data.songs);\n\t}\n\n\t//Set playlist name to what you typed\n\tconst handleChange2 = (event) => {\n\t\tsetPlaylistName(event.target.value);\n\t};\n\n\t//Set playlists songs to ones you clicked\n\tconst addToPlaylist = (song) => {\n\t\tsetPlaylistSongs([...playlistSongs, song]);\n\t};\n\n\t//Splice out selected song from forming playlist\n\tconst removeFromPlaylist = (indexToRemove) => {\n\t\tlet newList = [...playlistSongs];\n\t\tnewList.splice(indexToRemove, 1);\n\t\tsetPlaylistSongs(newList);\n\t};\n\n\t//Combine name and songs to make playlist\n\tconst setting = () => {\n\t\tsetPlaylist({ name: playlistName, songs: playlistSongs });\n\t};\n\n\t//change playlist anytime name or songs change\n\tuseEffect(() => {\n\t\tsetting();\n\t}, [playlistSongs, playlistName]);\n\n\t//Post playlist\n\tasync function handleClick2(e) {\n\t\tconst response = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists',\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(playlist),\n\t\t\t}\n\t\t);\n\t}\n\n\n\t//Create return elements\n\t//Create list of songs you pulled from database\n\tconst songList = songs.map((song) => (\n\t\t<li className='song-list' key={song.title}>\n\t\t\t{song.title} - {song.artist} -{' '}\n\t\t\t<a href={song.trackLink} target='_blank' rel='noreferrer'>\n\t\t\t\tListen\n\t\t\t</a>{' '}\n\t\t\t-{' '}\n\t\t\t<button className='song-btns' onClick={() => addToPlaylist(song.title)}>\n\t\t\t\tAdd\n\t\t\t</button>{' '}\n\t\t\t<button\n\t\t\t\tclassName='song-btns'\n\t\t\t\tonClick={() => addToFavoriteSongs(song.title)}>\n\t\t\t\tFav\n\t\t\t</button>\n\t\t</li>\n\t));\n\n\t//Create return element of songs you want to add to database\n\tconst playlistList = playlistSongs.map((song, index) => (\n\t\t<div>\n\t\t\t<li key={song}>{song}</li>\n\t\t\t<button className='song-btns' onClick={() => removeFromPlaylist(index)}>\n\t\t\t\t{' '}\n\t\t\t\tRemove\n\t\t\t</button>\n\t\t</div>\n\t));\n\n\t//Every time you click add to favs you set the above state to that song\n\tconst addToFavoriteSongs = (fav) => {\n\t\tsetFavoriteSongs([fav]);\n\t};\n\n\t//when state changes run PUT api call on favs playlist\n\tuseEffect(() => {\n\t\tpostFavs();\n\t}, [favoriteSongs]);\n\n\t//PUT: update favorites to include new song\n\tasync function postFavs() {\n\t\tconst response = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists/favorites',\n\t\t\t{\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(favoriteSongs),\n\t\t\t}\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='generator-container'>\n\t\t\t<form className='new-playlist-form' onSubmit={handleClick2}>\n\t\t\t\t<input\n\t\t\t\t\tclassName='new-playlist-input'\n\t\t\t\t\tonChange={handleChange2}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='artistName'\n\t\t\t\t\tplaceholder='Playlist Name'\n\t\t\t\t\tvalue={playlistName}\n\t\t\t\t/>\n\t\t\t\t<button type='submit' className='save-playlist-btn'>\n\t\t\t\t\tSave to Playlists\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<form\n\t\t\t\tclassName='checkbox-form-container'\n\t\t\t\tonSubmit={handleClick}\n\t\t\t\tonChange={handleChange}>\n\t\t\t\t<div className='checkbox-container'>\n\t\t\t\t\t<input type='radio' id='rock' name='genre' value='rock' />\n\t\t\t\t\t<label for='rock'>Rock</label>\n\t\t\t\t\t<input type='radio' id='jazz' name='genre' value='jazz' />\n\t\t\t\t\t<label for='jazz'>Jazz</label>\n\t\t\t\t\t<input type='radio' id='rap' name='genre' value='rap' />\n\t\t\t\t\t<label for='rap'>Rap</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tid='alternative'\n\t\t\t\t\t\tname='genre'\n\t\t\t\t\t\tvalue='alternative'\n\t\t\t\t\t/>\n\t\t\t\t\t<label for='alternative'>Alternative</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input type='radio' id='blues' name='genre' value='blues' />\n\t\t\t\t\t<label for='blues'>Blues</label>\n\t\t\t\t\t<input type='radio' id='electronic' name='genre' value='electronic' />\n\t\t\t\t\t<label for='electronic'>Electronic</label>\n\t\t\t\t\t<input type='radio' id='funk' name='genre' value='funk' />\n\t\t\t\t\t<label for='funk'>Funk</label>\n\t\t\t\t\t<input type='radio' id='hip hop' name='genre' value='hip hop' />\n\t\t\t\t\t<label for='hip hop'>Hip Hop</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<input type='radio' id='metal' name='genre' value='metal' />\n\t\t\t\t\t<label for='metal'>Metal</label>\n\t\t\t\t\t<input type='radio' id='pop' name='genre' value='pop' />\n\t\t\t\t\t<label for='pop'>Pop</label>\n\t\t\t\t\t<input type='radio' id='punk' name='genre' value='punk' />\n\t\t\t\t\t<label for='punk'>Punk</label>\n\t\t\t\t\t<input type='radio' id='r&b' name='genre' value='r&b' />\n\t\t\t\t\t<label for='r&b'>R&B</label>\n\t\t\t\t</div>\n\t\t\t\t<button className='generator-btn' type='submit'>\n\t\t\t\t\tGenerate Playlist\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div className='generated-playlist-container'>\n\t\t\t\t<ul className='generated-playlist'>{songList}</ul>\n\t\t\t</div>\n\t\t\t<ul className='add-to-playlist-list'>{playlistList}</ul>\n\t\t</div>\n\t);\n};\n\nexport default Generator;\n","import React, { useEffect, useState } from 'react';\nimport './Favorites.css';\n\nconst Favorites = (props) => {\n\t//Set state to empty array\n\tconst [favorites, setFavorites] = useState([]);\n\n\t//Get \"favorites\" playlist from playlists database and set state to it\n\tasync function showFavs() {\n\t\tconst response = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists/favorites',\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t}\n\t\t);\n\t\tconst data = await response.json();\n\t\tsetFavorites(data.playlists[0].songs);\n\t}\n\n\t//useeffect so that above function runs on mount\n\tuseEffect(() => {\n\t\tshowFavs();\n\t}, []);\n\n\t//create return elements\n\tconst songsList = favorites.map((song, index) => (\n\t\t<div className='favorites-list'>\n\t\t\t<div key={song}>{song}</div>\n\t\t</div>\n\t));\n\n\treturn (\n\t\t<div className='favorites-container'>\n\t\t\t<h4>Favorites</h4>\n\t\t\t{songsList}\n\t\t</div>\n\t);\n};\n\nexport default Favorites;\n","import React, { useEffect, useState } from 'react';\nimport './Playlist.css';\nconst Playlist = (props) => {\n\t//Make some empty array states\n\tconst [playlist, setPlaylist] = useState([]);\n\tconst [selectedPlaylist, setSelectedPlaylist] = useState([]);\n\n\t//Get playlists from database\n\tasync function showPlaylists() {\n\t\tconst response = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists',\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t}\n\t\t);\n\t\tconst data = await response.json();\n\t\tvar filtered = data.playlists.filter(function (el) {\n\t\t\treturn el.name != 'favorites';\n\t\t});\n\t\tsetPlaylist(filtered);\n\t}\n\t//Run above function on mount\n\tuseEffect(() => {\n\t\tshowPlaylists();\n\t}, []);\n\t\n\t//Set state to songs within playlist\n\tconst showSelectedPlaylist = (item) => {\n\t\tsetSelectedPlaylist(item.songs);\n\t};\n\t//Delete (item is playlist, item.name is param used in findOneAndDelete)\n\tasync function deletePlaylist(item) {\n\t\tconsole.log(item);\n\t\tconst response = await fetch(\n\t\t\t`https://spotlessproject.herokuapp.com/playlists/${item.name}`,\n\t\t\t{\n\t\t\t\tmethod: 'DELETE',\n\t\t\t}\n\t\t);\n\t\t//Get all remaining playlists and set state to them\n\t\tconst response2 = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists',\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t}\n\t\t);\n\t\tconst data = await response2.json();\n\t\tvar filtered = data.playlists.filter(function (el) {\n\t\t\treturn el.name != 'favorites';\n\t\t});\n\t\tsetPlaylist(filtered);\n\t}\n\t//Create return elements\n\t//playlists\n\tconst playlistList = playlist.map((playlist, index) => (\n\t\t<div className='single-playlist'>\n\t\t\t{playlist.name}{' '}\n\t\t\t<button\n\t\t\t\tclassName='single-playlist-btns'\n\t\t\t\tonClick={() => showSelectedPlaylist(playlist)}>\n\t\t\t\tShow Playlist\n\t\t\t</button>{' '}\n\t\t\t<button\n\t\t\t\tclassName='single-playlist-btns'\n\t\t\t\tonClick={() => deletePlaylist(playlist)}>\n\t\t\t\tDelete Playlist\n\t\t\t</button>\n\t\t</div>\n\t));\n\t//songs within selected playlist\n\tconst songList = selectedPlaylist.map((item) => {\n\t\treturn <div className='song-list-container'>{item}</div>;\n\t});\n\treturn (\n\t\t<div className='playlists-container'>\n\t\t\t<h4 className='playlist-headers'>Playlists</h4>\n\t\t\t{playlistList}\n\t\t\t<h4 className='playlist-headers'>Playlist Songs</h4>\n\t\t\t{songList}\n\t\t</div>\n\t);\n};\nexport default Playlist;\n","import React from 'react';\nimport './Info.css';\n\nconst Info = () => {\n\treturn (\n\t\t<div className='info-container'>\n\t\t\t<h1 className='info-header'>Info</h1>\n\t\t\t<p className='info-paragraph'>\n\t\t\t\tA new music app called, \"SpotLess\". This revolutionary music app will\n\t\t\t\tallow users to create randomized music playlists from the Spotify API.\n\t\t\t\tUsers will be able to generate randomized playlists using specific track\n\t\t\t\tdetails such as: genre, decade, tempo, etc. Users will also be able to\n\t\t\t\tfavorite these randomly selected tracks to store into their own\n\t\t\t\tfavorites playlist.\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Info;","import React from 'react';\nimport './Team.css';\n\nconst Team = () => {\n\treturn (\n\t\t<div className='team-container'>\n\t\t\t<h1 className='team-header'>Team</h1>\n\t\t\t<p className='team-paragraph'>\n\t\t\t\tJeremy Stubbs: I built this site with a little help building the json seed file.\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Team;\n","import React from 'react';\nimport './Legal.css';\n\nconst Legal = () => {\n\treturn (\n\t\t<div className='legal-container'>\n\t\t\t<h1 className='team-header'>Legal</h1>\n\t\t\t<p className='team-paragraph'>\n\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\n\t\t\t\tcommodo nunc ac leo hendrerit consequat. Donec non leo finibus, bibendum\n\t\t\t\tligula nec, tincidunt arcu. Ut id fermentum erat. Maecenas porttitor sem\n\t\t\t\tnec ante elementum mattis.\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Legal;","import React, { useEffect, useState } from 'react';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport Generator from './components/Generator/Generator';\nimport Favorites from './components/Favorites/Favorites';\nimport Playlist from './components/Playlist/Playlist';\nimport Info from './components/Info/Info';\nimport Team from './components/Team/Team';\nimport Legal from './components/Legal/Legal';\n\nfunction App() {\n\tconst [songs, setSongs] = useState([]);\n\n\t//add favs if doesn't exist with following 2 functions\n\tasync function handleClick2(e) {\n\t\tconst response = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists',\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ name: 'favorites', songs: [] }),\n\t\t\t}\n\t\t);\n\t}\n\n\tasync function showFavs() {\n\t\tconst response = await fetch(\n\t\t\t'https://spotlessproject.herokuapp.com/playlists/favorites',\n\t\t\t{\n\t\t\t\tmethod: 'GET',\n\t\t\t}\n\t\t);\n\t\tconst data = await response.json();\n\t\tlet placeholder = data.playlists.filter(\n\t\t\t(item) => item.name === 'favorites'\n\t\t);\n\t\tif (placeholder.length === 0) {\n\t\t\thandleClick2();\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tshowFavs();\n\t}, []);\n\n\treturn (\n\t\t<div className='app-container'>\n\t\t\t<nav>\n\t\t\t\t<Link className='nav-item' to='/'>\n\t\t\t\t\tHome\n\t\t\t\t</Link>\n\t\t\t\t<Link className='nav-item' to='/playlist'>\n\t\t\t\t\tPlaylists\n\t\t\t\t</Link>\n\t\t\t\t<Link className='nav-item' to='/favorites'>\n\t\t\t\t\tFavorites\n\t\t\t\t</Link>\n\t\t\t\t<Link className='nav-item' to='/generator'>\n\t\t\t\t\tGenerator\n\t\t\t\t</Link>\n\t\t\t\t<Link className='nav-item' to='/profile'>\n\t\t\t\t\tProfile\n\t\t\t\t</Link>\n\t\t\t</nav>\n\t\t\t<main>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path='/' element={<Home />} />\n\t\t\t\t\t<Route path='playlist' element={<Playlist />} />\n\t\t\t\t\t<Route path='/favorites' element={<Favorites />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/generator'\n\t\t\t\t\t\telement={<Generator songs={songs} setSongs={setSongs} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/profile' />\n\t\t\t\t\t<Route path='/info' element={<Info />} />\n\t\t\t\t\t<Route path='/Team' element={<Team />} />\n\t\t\t\t\t<Route path='/legal' element={<Legal />} />\n\t\t\t\t</Routes>\n\t\t\t</main>\n\t\t\t<footer>\n\t\t\t\t<Link className='footer-item' to='/info'>\n\t\t\t\t\tInfo\n\t\t\t\t</Link>\n\t\t\t\t<Link className='footer-item' to='/team'>\n\t\t\t\t\tTeam\n\t\t\t\t</Link>\n\t\t\t\t<Link className='footer-item' to='/legal'>\n\t\t\t\t\tLegal\n\t\t\t\t</Link>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}